/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.sil.sga.interfaces;

import edu.sil.sga.dao.ClaseDAO;
import edu.sil.siga.bean.Clase;
import edu.sil.siga.bean.Curso;
import edu.sil.siga.bean.CursoPorGrado;
import edu.sil.siga.bean.Docente;
import edu.sil.siga.bean.Grado;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cesar Lopez
 */
public class Admi_claseCRUD extends javax.swing.JInternalFrame {

    /**
     * Creates new form Admi_claseCRUD
     */
    //Variables Globales
    //Grado grado;
    //Curso curso;
    Docente docente;
    CursoPorGrado cursoGrado;
    Clase objClaseSeleccionada;

    public List<Clase> listaDeClases;

    //INICIALIZACION
    public Admi_claseCRUD() {
        initComponents();
        setLocation(120, 50);
        activaBotones(true, false, false, false);
        ListarClases();
        activaCajas(false);

    }

    void cargarDatosCursoPorGrado(CursoPorGrado objCursoGrado) {
        this.cursoGrado = objCursoGrado;
        txtCursoPorGrado.setText(objCursoGrado.getGrado().getnumeroGrado() + " - "
                + objCursoGrado.getGrado().getSeccion().getDescripcion() + " - "
                + objCursoGrado.getGrado().getNivel().getNombreLargo() + " - "
                + objCursoGrado.getCurso().getNombreLargo());
        //txtSeccion.setText(objGrado.getSeccion().getDescripcion());
        //txtNivel.setText(objGrado.getNivel().getNombreCorto());
    }

    void cargarDatosDocente(Docente objDocente) {
        this.docente = objDocente;
        txtDocente.setText(objDocente.getNombre() + ", " + objDocente.getApellidopaterno());
        //txtSeccion.setText(objGrado.getSeccion().getDescripcion());
        //txtNivel.setText(objGrado.getNivel().getNombreCorto());
    }

    void ListarClases() {

        ClaseDAO dao = new ClaseDAO();
        listaDeClases = dao.ListarClases();
        DefaultTableModel modelo1 = new DefaultTableModel();

        modelo1.addColumn("Grado Completo ");
        modelo1.addColumn("Nombre del Curso");
        //modelo1.addColumn("Docente");

        for (Clase clase : listaDeClases) {
            modelo1.addRow(new String[]{
                clase.getCursoGrado().getGrado().getnumeroGrado() + " "
                + clase.getCursoGrado().getGrado().getSeccion().getDescripcion() + ""
                + clase.getCursoGrado().getGrado().getNivel().getNombreLargo() + "",
                clase.getCursoGrado().getCurso().getNombreLargo()
            //clase.getDocente().getNombre() + " " + clase.getDocente().getApellidopaterno() + ""
            });
        }
        tblClase.setModel(modelo1);

    }

    void activaCajas(boolean a) {
        
        txtObservacion.setEnabled(a);
        txtCursoPorGrado.setEnabled(a);

        txtDocente.setEnabled(a);

        btnBuscarDocente.setEnabled(a);
        btnBuscarCursoPorGrado.setEnabled(a);
    }

    void limpiarCajas() {
        txtCursoPorGrado.setText("");

        txtDocente.setText("");
        txtObservacion.setText("");
    }

    public void activaBotones(boolean a, boolean b, boolean c, boolean d) {
        btnNuevo.setEnabled(a);
        btnGuardar.setEnabled(b);
        btnActualizar.setEnabled(c);
        btnEliminar.setEnabled(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtDocente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCursoPorGrado = new javax.swing.JTextField();
        btnBuscarCursoPorGrado = new javax.swing.JButton();
        btnBuscarDocente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservacion = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClase = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("I.E.P. San Ignacio de Loyola - Gestionar Clase");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de clase"));

        jLabel4.setText("* Docente:");

        txtDocente.setEditable(false);
        txtDocente.setEnabled(false);

        jLabel3.setText("* Curso por Grado:");

        txtCursoPorGrado.setEditable(false);
        txtCursoPorGrado.setEnabled(false);

        btnBuscarCursoPorGrado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btnBuscar.png"))); // NOI18N
        btnBuscarCursoPorGrado.setToolTipText("Buscar un Curso Por Grado");
        btnBuscarCursoPorGrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCursoPorGradoActionPerformed(evt);
            }
        });

        btnBuscarDocente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btnBuscar.png"))); // NOI18N
        btnBuscarDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDocenteActionPerformed(evt);
            }
        });

        jLabel6.setText("Observacion:");

        jScrollPane2.setAutoscrolls(true);

        txtObservacion.setColumns(20);
        txtObservacion.setRows(3);
        txtObservacion.setAutoscrolls(false);
        jScrollPane2.setViewportView(txtObservacion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCursoPorGrado)
                            .addComponent(txtDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarCursoPorGrado))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarDocente))))
                    .addComponent(jScrollPane2))
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCursoPorGrado)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCursoPorGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarDocente, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Listar Clases"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblClase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClase);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 340, 260));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btnNuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btnGuardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btnActualizar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btnEliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Gestion de Clase");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jLabel1)
                .addContainerGap(542, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(btnNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarCursoPorGradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCursoPorGradoActionPerformed
        // TODO add your handling code here:
        List<CursoPorGrado> lstCursoPorGrado = new ArrayList<>();
        Admin_buscarCursoPorGrado form = new Admin_buscarCursoPorGrado(null, true, lstCursoPorGrado);
        form.setVisible(true);
        if (lstCursoPorGrado.isEmpty()) {
            //Ventana se cerro sin seleccionar
        } else {
            CursoPorGrado objCursoPorGradoElegido = lstCursoPorGrado.get(0);
            cargarDatosCursoPorGrado(objCursoPorGradoElegido);
        }
    }//GEN-LAST:event_btnBuscarCursoPorGradoActionPerformed

    private void btnBuscarDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDocenteActionPerformed
        // TODO add your handling code here:

        List<Docente> lstDocente = new ArrayList<>();
        Admi_buscarDocente form = new Admi_buscarDocente(null, true, lstDocente);
        form.setVisible(true);
        if (lstDocente.isEmpty()) {
            //Ventana se cerro sin seleccionar
        } else {
            Docente objGradoElegido = lstDocente.get(0);
            cargarDatosDocente(objGradoElegido);
        }

    }//GEN-LAST:event_btnBuscarDocenteActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        if (txtCursoPorGrado.getText().equalsIgnoreCase("")
                || txtDocente.getText().equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(this, " Debe ingresar los campos requeridos (*) ");

        } else {

            int idCursoGrado = Integer.parseInt(String.valueOf(cursoGrado.getId()));
            int idDocente = Integer.parseInt(String.valueOf(docente.getId()));

            ClaseDAO dao = new ClaseDAO();
            Clase clase = new Clase();
            CursoPorGrado cursoGrado = new CursoPorGrado();
            Docente docente = new Docente();

            cursoGrado.setId(idCursoGrado);
            docente.setId(idDocente);

            clase.setCursoGrado(cursoGrado);
            clase.setDocente(docente);

            clase.setObservacion(txtObservacion.getText());

            if (dao.RegistrarClase(clase)) {
                JOptionPane.showMessageDialog(this, "Se registro correctamente a la Clase :) ");
                btnNuevo.setText("Nuevo");
                ListarClases();
                activaCajas(false);
                limpiarCajas();
                activaBotones(true, false, false, false);

            } else {
                JOptionPane.showMessageDialog(this, "No lo pudimos registrar por problemas internos :( ");
            }
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClaseMouseClicked
        // TODO add your handling code here:

        int fila = tblClase.getSelectedRow();
        if (fila != -1) {

            objClaseSeleccionada = listaDeClases.get(fila);

            cursoGrado = objClaseSeleccionada.getCursoGrado();
            docente = objClaseSeleccionada.getDocente();

            txtCursoPorGrado.setText(
                    "'"+objClaseSeleccionada.getCursoGrado().getGrado().getnumeroGrado()+" "
                    + objClaseSeleccionada.getCursoGrado().getGrado().getSeccion().getDescripcion()+"' "
                    +"de "+ objClaseSeleccionada.getCursoGrado().getGrado().getNivel().getNombreLargo()
                    +" -- "+ objClaseSeleccionada.getCursoGrado().getCurso().getNombreLargo()
            );
            txtDocente.setText(objClaseSeleccionada.getDocente().getNombre() + ", "
                    + objClaseSeleccionada.getDocente().getApellidopaterno()
                    + objClaseSeleccionada.getDocente().getApellidomaterno()
            );

            txtObservacion.setText(String.valueOf(objClaseSeleccionada.getObservacion()));

            btnNuevo.setText("Nuevo");
            activaBotones(true, false, true, true);
            activaCajas(true);

        }

    }//GEN-LAST:event_tblClaseMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:

        if (btnNuevo.getText().equals("Nuevo")) {
            limpiarCajas();
            activaBotones(true, true, false, false);
            btnNuevo.setText("Cancelar");
            activaCajas(true);
        } else {
            activaBotones(true, false, false, false);
            btnNuevo.setText("Nuevo");
            activaCajas(false);
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:

        if (txtCursoPorGrado.getText().equalsIgnoreCase("")
                || txtDocente.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, " Debe ingresar los campos requeridos (*) ");
        } else {
            try {
                ClaseDAO dao = new ClaseDAO();
                Clase clase = objClaseSeleccionada;

                clase.setCursoGrado(cursoGrado);
                clase.setDocente(docente);
                clase.setObservacion(txtObservacion.getText());

                if (dao.ActualizarClase(clase)) {
                    JOptionPane.showMessageDialog(this, "Se actualizo correctamente a la Clase :) ");
                    btnNuevo.setText("Nuevo");
                    ListarClases();
                    activaCajas(false);
                    limpiarCajas();
                    activaBotones(true, false, false, false);
                } else {
                    JOptionPane.showMessageDialog(this, "No lo pudimos registrar por problemas internos :( ");
                }

            } catch (Exception e) {
                System.out.println(" ERROR --> INTERFAZ --> CLASE --> Actualizar --> " + e.getMessage());

            }
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        if (txtCursoPorGrado.getText().equalsIgnoreCase("")
                || txtDocente.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, " Debe ingresar los campos requeridos (*) ");
        } else {

            try {
                ClaseDAO dao = new ClaseDAO();
                Clase clase = objClaseSeleccionada;

                clase.setCursoGrado(cursoGrado);
                clase.setDocente(docente);
                clase.setObservacion(txtObservacion.getText());

                if (dao.EliminarClase(clase)) {
                    JOptionPane.showMessageDialog(this, "Se actualizo correctamente a la Clase :) ");
                    btnNuevo.setText("Nuevo");
                    ListarClases();
                    activaCajas(false);
                    limpiarCajas();
                    activaBotones(true, false, false, false);
                } else {
                    JOptionPane.showMessageDialog(this, "No lo pudimos eliminar por problemas internos :( ");
                }

            } catch (Exception e) {
                System.out.println(" ERROR --> INTERFAZ --> CLASE --> Eliminar --> " + e.getMessage());

            }
        }

    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscarCursoPorGrado;
    private javax.swing.JButton btnBuscarDocente;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblClase;
    private javax.swing.JTextField txtCursoPorGrado;
    private javax.swing.JTextField txtDocente;
    private javax.swing.JTextArea txtObservacion;
    // End of variables declaration//GEN-END:variables
}
