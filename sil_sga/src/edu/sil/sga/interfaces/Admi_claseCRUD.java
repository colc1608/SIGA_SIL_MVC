/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.sil.sga.interfaces;

import edu.sil.sga.dao.ClaseDAO;
import edu.sil.sga.entidades.Clase;
import edu.sil.sga.entidades.Curso;
import edu.sil.sga.entidades.Docente;
import edu.sil.sga.entidades.Grado;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cesar Lopez
 */
public class Admi_claseCRUD extends javax.swing.JInternalFrame {

    /**
     * Creates new form Admi_claseCRUD
     */
    //Variables Globales
    Grado grado;
    Curso curso;
    Docente docente;
    Clase objClaseSeleccionada;
    public List<Clase> listaDeClases;

    //INICIALIZACION
    public Admi_claseCRUD() {
        initComponents();
        setLocation(200, 100);
        setSize(880, 490); // X , Y

        activaBotones(true, false, false, false);
        ListarClases();
        activaCajas(false);

    }

    void cargarDatosGrado(Grado objGrado) {
        this.grado = objGrado;
        txtGrado.setText(" ' " + objGrado.getnumeroGrado() + " - " + objGrado.getSeccion().getDescripcion() + " ' de " + objGrado.getNivel().getNombreCorto());
        //txtSeccion.setText(objGrado.getSeccion().getDescripcion());
        //txtNivel.setText(objGrado.getNivel().getNombreCorto());
    }

    void cargarDatosDocente(Docente objDocente) {
        this.docente = objDocente;
        txtDocente.setText(objDocente.getNombre() + ", " + objDocente.getApellidopaterno());
        //txtSeccion.setText(objGrado.getSeccion().getDescripcion());
        //txtNivel.setText(objGrado.getNivel().getNombreCorto());
    }

    void cargarDatosCurso(Curso objCurso) {
        this.curso = objCurso;
        txtCurso.setText(objCurso.getNombreLargo());
        //txtSeccion.setText(objGrado.getSeccion().getDescripcion());
        //txtNivel.setText(objGrado.getNivel().getNombreCorto());
    }

    void ListarClases() {
        try {
            ClaseDAO dao = new ClaseDAO();
            listaDeClases = dao.ListarClases();
            DefaultTableModel modelo1 = new DefaultTableModel();

            modelo1.addColumn("Nombre Docente");
            modelo1.addColumn("Curso");
            modelo1.addColumn("Grado");

            for (Clase clase : listaDeClases) {
                modelo1.addRow(new String[]{
                    clase.getDocente().getNombre() + "",
                    clase.getCurso().getNombreLargo() + "",
                    clase.getGrado().getnumeroGrado() + ""
                });
            }
            tblClase.setModel(modelo1);

        } catch (Exception e) {
            System.out.println("error --> interfaz --> docente --> listar --> " + e.getMessage());
            e.printStackTrace();
        }

    }

    void activaCajas(boolean a) {
        txtCantidad.setEnabled(a);
        txtObservacion.setEnabled(a);
        txtGrado.setEnabled(a);
        txtCurso.setEnabled(a);
        txtDocente.setEnabled(a);
        btnBuscarCurso.setEnabled(a);
        btnBuscarDocente.setEnabled(a);
        btnBuscarGrado.setEnabled(a);
    }

    void limpiarCajas() {
        txtGrado.setText("");
        txtCurso.setText("");
        txtDocente.setText("");
        txtObservacion.setText("");
        txtCantidad.setText("");
    }

    public void activaBotones(boolean a, boolean b, boolean c, boolean d) {
        btnNuevo.setEnabled(a);
        btnGuardar.setEnabled(b);
        btnActualizar.setEnabled(c);
        btnEliminar.setEnabled(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDocente = new javax.swing.JTextField();
        txtCurso = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtGrado = new javax.swing.JTextField();
        btnBuscarGrado = new javax.swing.JButton();
        btnBuscarCurso = new javax.swing.JButton();
        btnBuscarDocente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservacion = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClase = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de clase"));

        jLabel5.setText("* Cantidad de Alumnos");

        jLabel4.setText("* Docente:");

        txtDocente.setEditable(false);
        txtDocente.setEnabled(false);

        txtCurso.setEditable(false);
        txtCurso.setEnabled(false);

        jLabel3.setText("* Grado:");

        txtGrado.setEditable(false);
        txtGrado.setEnabled(false);

        btnBuscarGrado.setText("Buscar");
        btnBuscarGrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarGradoActionPerformed(evt);
            }
        });

        btnBuscarCurso.setText("Buscar");
        btnBuscarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCursoActionPerformed(evt);
            }
        });

        btnBuscarDocente.setText("Buscar");
        btnBuscarDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDocenteActionPerformed(evt);
            }
        });

        jLabel2.setText("* Curso:");

        jLabel6.setText("Observacion:");

        jScrollPane2.setAutoscrolls(true);

        txtObservacion.setColumns(20);
        txtObservacion.setRows(3);
        txtObservacion.setAutoscrolls(false);
        jScrollPane2.setViewportView(txtObservacion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4))
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDocente, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(txtCurso, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtGrado))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarCurso, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBuscarDocente, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBuscarGrado, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane2))
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarGrado)
                    .addComponent(txtGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCurso)
                    .addComponent(txtCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarDocente)
                    .addComponent(txtDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Listar Clases"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblClase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tblClase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClase);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 240, 260));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel1.setText("Gestion de Clase");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
            .addGroup(layout.createSequentialGroup()
                .addGap(368, 368, 368)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnGuardar)
                            .addComponent(btnActualizar)
                            .addComponent(btnEliminar)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarGradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarGradoActionPerformed
        // TODO add your handling code here:
        List<Grado> lstGrado = new ArrayList<>();
        Admi_buscarGrado form = new Admi_buscarGrado(null, true, lstGrado);
        form.setVisible(true);
        if (lstGrado.isEmpty()) {
            //Ventana se cerro sin seleccionar
        } else {
            Grado objGradoElegido = lstGrado.get(0);
            cargarDatosGrado(objGradoElegido);
        }
    }//GEN-LAST:event_btnBuscarGradoActionPerformed

    private void btnBuscarDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDocenteActionPerformed
        // TODO add your handling code here:

        List<Docente> lstDocente = new ArrayList<>();
        Admi_buscarDocente form = new Admi_buscarDocente(null, true, lstDocente);
        form.setVisible(true);
        if (lstDocente.isEmpty()) {
            //Ventana se cerro sin seleccionar
        } else {
            Docente objGradoElegido = lstDocente.get(0);
            cargarDatosDocente(objGradoElegido);
        }

    }//GEN-LAST:event_btnBuscarDocenteActionPerformed

    private void btnBuscarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCursoActionPerformed
        // TODO add your handling code here:

        List<Curso> lstCurso = new ArrayList<>();
        Admi_buscarCurso form = new Admi_buscarCurso(null, true, lstCurso);
        form.setVisible(true);
        if (lstCurso.isEmpty()) {
            //Ventana se cerro sin seleccionar
        } else {
            Curso objCursoElegido = lstCurso.get(0);
            cargarDatosCurso(objCursoElegido);
        }


    }//GEN-LAST:event_btnBuscarCursoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        if (txtGrado.getText().equalsIgnoreCase("")
                || txtDocente.getText().equalsIgnoreCase("")
                || txtCurso.getText().equalsIgnoreCase("")
                || txtCantidad.getText().equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(this, " Debe ingresar los campos requeridos (*) ");

        } else {

            int idGrado = Integer.parseInt(String.valueOf(grado.getId()));
            int idCurso = Integer.parseInt(String.valueOf(curso.getId()));
            int idDocente = Integer.parseInt(String.valueOf(docente.getId()));

            try {
                ClaseDAO dao = new ClaseDAO();
                Clase clase = new Clase();
                Grado grado = new Grado();
                Curso curso = new Curso();
                Docente docente = new Docente();

                grado.setId(idGrado);
                clase.setGrado(grado);

                curso.setId(idCurso);
                clase.setCurso(curso);

                docente.setId(idDocente);
                clase.setDocente(docente);

                clase.setCantidadAlumnos(Integer.parseInt(txtCantidad.getText()));
                clase.setObservacion(txtObservacion.getText());

                if (dao.RegistrarClase(clase)) {
                    JOptionPane.showMessageDialog(this, "Se registro correctamente a la Clase :) ");
                    btnNuevo.setText("Nuevo");
                    ListarClases();
                    activaCajas(false);
                    limpiarCajas();
                    activaBotones(true, false, false, false);

                } else {
                    JOptionPane.showMessageDialog(this, "No lo pudimos registrar por problemas internos :( ");
                }

            } catch (Exception e) {
                System.out.println(" ERROR --> INTERFAZ --> CLASE --> Guardar --> " + e.getMessage());

            }
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblClaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClaseMouseClicked
        // TODO add your handling code here:
        int fila = tblClase.getSelectedRow();
        if (fila != -1) {

            objClaseSeleccionada = listaDeClases.get(fila);
            curso = objClaseSeleccionada.getCurso();
            docente = objClaseSeleccionada.getDocente();
            grado = objClaseSeleccionada.getGrado();

            txtGrado.setText(String.valueOf(objClaseSeleccionada.getGrado().getnumeroGrado()));
            txtDocente.setText(String.valueOf(objClaseSeleccionada.getDocente().getNombre() + ", " + objClaseSeleccionada.getDocente().getApellidopaterno()));
            txtCurso.setText(String.valueOf(objClaseSeleccionada.getCurso().getNombreLargo()));
            txtCantidad.setText(String.valueOf(objClaseSeleccionada.getCantidadAlumnos()));
            txtObservacion.setText(String.valueOf(objClaseSeleccionada.getObservacion()));

            btnNuevo.setText("Nuevo");
            activaBotones(true, false, true, true);
            activaCajas(true);

        }

    }//GEN-LAST:event_tblClaseMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:

        if (btnNuevo.getText().equals("Nuevo")) {
            limpiarCajas();
            activaBotones(true, true, false, false);
            btnNuevo.setText("Cancelar");
            activaCajas(true);
        } else {
            activaBotones(true, false, false, false);
            btnNuevo.setText("Nuevo");
            activaCajas(false);
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:

        if (txtGrado.getText().equalsIgnoreCase("")
                || txtDocente.getText().equalsIgnoreCase("")
                || txtCurso.getText().equalsIgnoreCase("")
                || txtCantidad.getText().equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(this, " Debe ingresar los campos requeridos (*) ");

        } else {

            try {
                ClaseDAO dao = new ClaseDAO();
                Clase clase = objClaseSeleccionada;

                clase.setCurso(curso);
                clase.setDocente(docente);
                clase.setGrado(grado);
                clase.setCantidadAlumnos(Integer.parseInt(txtCantidad.getText()));
                clase.setObservacion(txtObservacion.getText());

                if (dao.ActualizarClase(clase)) {
                    JOptionPane.showMessageDialog(this, "Se actualizo correctamente a la Clase :) ");
                    btnNuevo.setText("Nuevo");
                    ListarClases();
                    activaCajas(false);
                    limpiarCajas();
                    activaBotones(true, false, false, false);
                } else {
                    JOptionPane.showMessageDialog(this, "No lo pudimos registrar por problemas internos :( ");
                }

            } catch (Exception e) {
                System.out.println(" ERROR --> INTERFAZ --> CLASE --> Actualizar --> " + e.getMessage());

            }
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (txtGrado.getText().equalsIgnoreCase("")
                || txtDocente.getText().equalsIgnoreCase("")
                || txtCurso.getText().equalsIgnoreCase("")
                || txtCantidad.getText().equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(this, " Debe ingresar los campos requeridos (*) ");

        } else {

            try {
                ClaseDAO dao = new ClaseDAO();
                Clase clase = objClaseSeleccionada;

                clase.setCurso(curso);
                clase.setDocente(docente);
                clase.setGrado(grado);
                clase.setCantidadAlumnos(Integer.parseInt(txtCantidad.getText()));
                clase.setObservacion(txtObservacion.getText());

                if (dao.EliminarClase(clase)) {
                    JOptionPane.showMessageDialog(this, "Se actualizo correctamente a la Clase :) ");
                    btnNuevo.setText("Nuevo");
                    ListarClases();
                    activaCajas(false);
                    limpiarCajas();
                    activaBotones(true, false, false, false);
                } else {
                    JOptionPane.showMessageDialog(this, "No lo pudimos eliminar por problemas internos :( ");
                }

            } catch (Exception e) {
                System.out.println(" ERROR --> INTERFAZ --> CLASE --> Eliminar --> " + e.getMessage());

            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscarCurso;
    private javax.swing.JButton btnBuscarDocente;
    private javax.swing.JButton btnBuscarGrado;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblClase;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCurso;
    private javax.swing.JTextField txtDocente;
    private javax.swing.JTextField txtGrado;
    private javax.swing.JTextArea txtObservacion;
    // End of variables declaration//GEN-END:variables
}
