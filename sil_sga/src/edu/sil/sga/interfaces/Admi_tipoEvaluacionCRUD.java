/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.sil.sga.interfaces;

import edu.sil.sga.dao.TipoEvaluacionDAO;
import edu.sil.sga.entidades.TipoEvaluacion;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cesar Lopez
 */
public class Admi_tipoEvaluacionCRUD extends javax.swing.JInternalFrame {

    /**
     * Creates new form Admi_tipoEvaluacionCRUD
     */
    public List<TipoEvaluacion> listaTipoEvaluacion;

    TipoEvaluacion tipoEvalSeleccionado;

    public Admi_tipoEvaluacionCRUD() {
        initComponents();
        activaBotones(true, false, false, false);
        ListarTipoEvaluacion();
        activaCajas(false);
        setLocation(250, 50);
    }

    void activaCajas(boolean a) {
        txtDescripcion.setEnabled(a);
        txtPeso.setEnabled(a);
        txtObservacion.setEnabled(a);
    }

    void limpiarCajas() {

        txtPeso.setText("");
        txtDescripcion.setText("");
        txtObservacion.setText("");
    }

    public void activaBotones(boolean a, boolean b, boolean c, boolean d) {
        btnNuevo.setEnabled(a);
        btnGuardar.setEnabled(b);
        btnActualizar.setEnabled(c);
        btnEliminar.setEnabled(d);
    }

    public void ListarTipoEvaluacion() {

        try {

            TipoEvaluacionDAO dao = new TipoEvaluacionDAO();
            listaTipoEvaluacion = dao.ListarTipoEvaluacion();
            DefaultTableModel modelo1 = new DefaultTableModel();

            modelo1.addColumn("Descripcion");
            modelo1.addColumn("Peso");
            //modelo1.addColumn("Observacion");

            for (TipoEvaluacion tipoEval : listaTipoEvaluacion) {
                modelo1.addRow(new String[]{
                    tipoEval.getDescripcion() + "",
                    tipoEval.getPeso()*100 + ""
                //tipoEval.getObservacion() + ""
                });
            }
            tblTipoEvaluacion.setModel(modelo1);

        } catch (Exception e) {
            System.out.println("ERROR - Interfaz - TipoEvaluacion - Listar ");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtDescripcion = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        txtObservacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTipoEvaluacion = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("Tipo de evaluacion");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Tipo de evaluacion"));

        txtPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesoKeyTyped(evt);
            }
        });

        jLabel2.setText("* Descripcion");

        jLabel3.setText("Observacion");

        jLabel4.setText("* Peso (% de 0 - 100)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtObservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Listar Tipos de Evaluacion"));

        tblTipoEvaluacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        tblTipoEvaluacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTipoEvaluacionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTipoEvaluacion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNuevo)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jLabel1)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnEliminar)
                            .addComponent(btnActualizar)
                            .addComponent(btnGuardar)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        Double peso = 0.0;

        if (txtPeso.getText().equalsIgnoreCase("")) {
            peso = 0.0;
        } else {
            peso = Double.parseDouble(String.valueOf(txtPeso.getText()));
        }

        String desc = txtDescripcion.getText();
        String obs = txtObservacion.getText();

        if (desc.equalsIgnoreCase("") || txtPeso.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Debe completar los campos requeridos (*) ", "ERROR", JOptionPane.ERROR_MESSAGE);

        } else {
            try {
                TipoEvaluacion tipoEval = new TipoEvaluacion();
                TipoEvaluacionDAO dao = new TipoEvaluacionDAO();

                tipoEval.setDescripcion(desc);
                tipoEval.setPeso(peso / 100);
                tipoEval.setObservacion(obs);

                if (dao.RegistrarTipoEvaluacion(tipoEval)) {
                    JOptionPane.showMessageDialog(null, "Se registro correctamente", "Operacion Exitosa", JOptionPane.INFORMATION_MESSAGE);
                    activaBotones(true, false, false, false);
                    btnNuevo.setText("Nuevo");
                    limpiarCajas();
                    ListarTipoEvaluacion();
                    activaCajas(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Ups.. Ocurrio un problema interno :(");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:

        if (btnNuevo.getText().equals("Nuevo")) {
            limpiarCajas();
            activaBotones(true, true, false, false);
            btnNuevo.setText("Cancelar");
            activaCajas(true);
        } else {
            activaBotones(true, false, false, false);
            btnNuevo.setText("Nuevo");
            activaCajas(false);
        }


    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:

        Double peso = 0.0;
        if (txtPeso.getText().equalsIgnoreCase("")) {
            peso = 0.0;
        } else {
            peso = Double.parseDouble(String.valueOf(txtPeso.getText()));
        }


        if (txtDescripcion.getText().equalsIgnoreCase("")
                || txtObservacion.getText().equalsIgnoreCase("")
                || txtPeso.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un registro e ingresar los campos requeridos (*) ");
        } else {

            try {
                TipoEvaluacion tipoEval = new TipoEvaluacion();
                TipoEvaluacionDAO dao = new TipoEvaluacionDAO();

                tipoEval.setId(tipoEvalSeleccionado.getId());
                tipoEval.setDescripcion(txtDescripcion.getText());
                tipoEval.setPeso(peso / 100);
                tipoEval.setObservacion(txtObservacion.getText());

                if (dao.ActualizarTipoEvaluacion(tipoEval)) {
                    JOptionPane.showMessageDialog(this, "Se actualizo correctamente");
                    limpiarCajas();
                    activaBotones(true, false, false, false);
                    activaCajas(false);
                    ListarTipoEvaluacion();
                } else {
                    JOptionPane.showMessageDialog(null, "Ups.. Ocurrio un problema interno :( ", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        Double peso = 0.0;
        if (txtPeso.getText().equalsIgnoreCase("")) {
            peso = 0.0;
        } else {
            peso = Double.parseDouble(txtPeso.getText());
        }

        if (txtObservacion.getText().equalsIgnoreCase("")
                || txtPeso.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Debe mantener los campos requeridos (*) ");
        } else {

            try {
                TipoEvaluacion tipoEval = new TipoEvaluacion();
                TipoEvaluacionDAO dao = new TipoEvaluacionDAO();

                tipoEval.setId(tipoEvalSeleccionado.getId());
                tipoEval.setDescripcion(txtDescripcion.getText());
                tipoEval.setPeso(peso / 100);
                tipoEval.setObservacion(txtObservacion.getText());

                if (dao.EliminarTipoEvaluacion(tipoEval)) {
                    JOptionPane.showMessageDialog(this, "Se elimino correctamente");
                    limpiarCajas();
                    activaBotones(true, false, false, false);
                    activaCajas(false);
                    ListarTipoEvaluacion();
                } else {
                    JOptionPane.showMessageDialog(null, "Ups.. Ocurrio un problema interno :( ", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblTipoEvaluacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTipoEvaluacionMouseClicked
        // TODO add your handling code here:

        int fila = tblTipoEvaluacion.getSelectedRow();
        if (fila != -1) {
            tipoEvalSeleccionado = listaTipoEvaluacion.get(fila);

            txtDescripcion.setText(String.valueOf(tipoEvalSeleccionado.getDescripcion()));
            txtPeso.setText(String.valueOf(tipoEvalSeleccionado.getPeso()*100));
            txtObservacion.setText(String.valueOf(tipoEvalSeleccionado.getObservacion()));

            btnNuevo.setText("Nuevo");
            activaBotones(true, false, true, true);
            activaCajas(true);
        }
    }//GEN-LAST:event_tblTipoEvaluacionMouseClicked

    private void txtPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesoKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_txtPesoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTipoEvaluacion;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtObservacion;
    private javax.swing.JTextField txtPeso;
    // End of variables declaration//GEN-END:variables
}
